version: '3.8'
services:
  magic:
    image: mageai/mageai:latest
    command: mage start ${PROJECT_NAME}
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      USER_CODE_PATH: /home/src/${PROJECT_NAME}
      ENV: ${ENV}
    ports:
      - 6789:6789
    volumes:
      - .:/home/src/
    restart: on-failure:3

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.9.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    ports:
      - 9093:9093
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "kafka:9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  kafka-init:
    image: bitnami/kafka:3.9.0
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/bin/bash", "-c", "/scripts/kafka-init.sh" ]
    restart: "no"

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    restart: unless-stopped


volumes:
  postgres_data:
  kafka_data:
  zookeeper_data: