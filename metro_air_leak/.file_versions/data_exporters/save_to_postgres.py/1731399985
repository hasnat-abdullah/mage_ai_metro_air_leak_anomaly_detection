from sqlalchemy import create_engine, text
from pandas import DataFrame
from mage_ai.settings.repo import get_repo_path
from mage_ai.io.config import ConfigFileLoader
from os import path

if 'data_exporter' not in globals():
    from mage_ai.data_preparation.decorators import data_exporter


@data_exporter
def export_data_to_postgres(df: DataFrame, **kwargs) -> None:
    """
    Template for exporting data to a PostgreSQL database.
    Specify your configuration settings in 'io_config.yaml'.

    Docs: https://docs.mage.ai/design/data-loading#postgresql
    """

    config_path = path.join(get_repo_path(), 'io_config.yaml')
    config_profile = 'default'
    config = ConfigFileLoader(config_path, config_profile).config
    table_name = 'air_compressor'

  POSTGRES_CONNECT_TIMEOUT: 10
  POSTGRES_DBNAME: metro
  POSTGRES_SCHEMA: public # Optional
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: 12345
  POSTGRES_HOST: host.docker.internal
  POSTGRES_PORT: 5432

    db_url = f"postgresql+psycopg2://{config['POSTGRES_USER']}:{config['POSTGRES_PASSWORD']}@{config['POSTGRES_HOST']}:{config['port']}/{config['database']}"

    engine = create_engine(db_url)

    with engine.connect() as connection:
        df.to_sql(table_name, con=connection, if_exists='replace', index=False)
        connection.execute(text(f'CREATE INDEX IF NOT EXISTS idx_status ON {table_name} (status);'))
    
    print(f"Data exported to the '{table_name}' table in PostgreSQL successfully.")